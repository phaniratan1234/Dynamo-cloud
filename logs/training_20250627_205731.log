2025-06-27 20:57:31,943 - training.phase2_router_training - INFO - info:68 - Phase 2 trainer initialized
2025-06-27 20:57:31,943 - training.phase2_router_training - INFO - info:68 - Starting Phase 2: Training dynamic router
2025-06-27 20:57:31,943 - training.phase2_router_training - INFO - info:68 - Skipping checkpoint loading (resume=False)
2025-06-27 20:57:42,763 - training.phase2_router_training - INFO - info:68 - Training router for 5 epochs
2025-06-27 20:57:42,763 - training - INFO - info:68 - Starting Epoch 0
2025-06-27 20:58:09,642 - training.phase2_router_training - ERROR - error:76 - Error in _prepare_task_targets: new(): invalid data type 'str'
2025-06-27 20:58:09,649 - training.phase2_router_training - ERROR - error:76 - Batch keys: ['input_ids', 'attention_mask', 'task_labels', 'task_weights', 'instruction', 'difficulty', 'input_text', 'tasks', 'expected_outputs', 'sentiment', 'qa', 'summarization', 'code_generation', 'translation']
2025-06-27 20:58:09,663 - training.phase2_router_training - ERROR - error:76 - Expected outputs: {'sentiment': tensor([0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1]), 'qa': tensor([[105, 105],
        [214, 214],
        [ 17,  38],
        [ 62,  62],
        [ 99,  99],
        [ 83,  83],
        [113, 113],
        [ 64,  64],
        [178, 178],
        [149, 149],
        [  0,  17],
        [ 87,  92],
        [222, 222],
        [162, 162]]), 'summarization': [tensor([    0,  9089,    12, 18582,  1269,  9249, 13397,   895,  1076,    12,
          104,  1906,  1543,  6490,    11,  3198,  4220,   479, 50118,  7083,
           12,   104,  1906,  1543,  1128,    71,  1247,  1137,  4792,     7,
          671,  3286,     7, 16121,   479, 50118, 12815,   781,  9118,  5292,
           11,  3158,    18,  3198,  1272,   479,     2,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0, 29806, 11649,   680, 11204,   211, 20143,    22,   133,  2751,
          113,  1436,     8,   542, 20639,    20,  3962,  1960,   139,  1253,
          479, 50118,   771,  9112,   161,    24, 18450,    39,  1355,    13,
        10343,  2647,  1825,  4928,     6, 10520,     7,  2914,  9949,   479,
        50118,   597, 20355,    21,   546,   556,     7,  1408,    86,    19,
          408,    71,  1618,  5233,     6,  1441,   161,   479,     2,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0,   113, 43195,  9798, 17550, 21791,  1809,   113,  1326,    23,
         3470,  8755,     6,    97, 16882,    15,  2297,  1808,   479, 50118,
        20877,    32,  1364,     9,  3385,   594,     6,  6340, 13878,     6,
          230,  1140, 42562,     6, 11710,  2611,     6,  4266,   354,  1242,
          479, 50118,   113, 43195,  9798, 17550, 21791,  1809,   113,  1237,
          149,   644,  1105,     6,  2266,     6,    23,     5,   755,  4355,
          479, 50118, 42261,  3292,  4355,     8,  3417,  3292,  4355,   120,
            5,   311,   220,   479,     2,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0, 38448, 44800,  4110,  5695,    39, 34070,   184,     9,  2271,
        10892,     6,  2487,   479, 50118,   133,  5545,    12,   180,    12,
          279,   320,   232, 12835,  2234, 36685,  5290, 22054,    11,  1139,
          479, 50118,   250,  1610,  2974,  8772,     6,  4110,    18,   372,
        10642,     6,  2841, 28844,    31,  2487,     7,     5,   121,     4,
          104,     4,    11, 39947,   479, 50118,   574,   261,  7468,     6,
         4110,    18,  1141,     6,   161,     5,   320,  2234,    40,   671,
            7,  2487,   456,   479,     2,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0, 14696,  1210,  4123,    11, 10226,    64,    28,  1726,    30,
         4295,     9, 12876,     6, 28848,   479, 50118, 14696,  1210,  2407,
           26,     7,    33,  1726,     5,   744,     9,   344,  2645,   255,
         6472, 11499,   102,     6,   545,   479, 50118, 27818,    34,  3307,
        22107,     7, 13694, 25280,  2199,   131,  2320,   224,    24,    18,
         3752,   479,     2,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), 'This code expr : expr div expr', tensor([    0, 29345,  4542,    11,  1089,  2938,     8,  1240,   158,   688,
           11,  4035,    42,    76,   479, 50118, 15953, 10699,    21,   156,
            7,  2999, 13705,    31,  4035,  2876,  4606,    13,    39,  1078,
          479, 50118, 29345, 15199,    19,  1878, 21362,     6,  3878,     6,
        42669,     6,   935,  2262,    23,  6767,    11,  9652,   479, 50118,
        32537,   362,   317,    15,     5,   276,   183,   237,   987,  3878,
          848,    11,  4035,   479,     2,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0, 43623,     9,  3835,  1024,  1716,    71, 16119, 11287,    16,
          411,     6,   159,    31,   656,  3278,     9,  4801,   479, 50118,
        33295, 15727, 22465,   142,   117,    65,    21,  1402,   141,   171,
         1024,    58,   963,   479, 50118, 32405,  3624,  1103,  1658,   136,
           55,    87,   112,     6,   151,   453,     9,  7077,   248, 41249,
          479,     2,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0, 31661, 10161,  1671,  2848,   139,   195,    12,   288,     7,
         9135,    88,     5,   297,  7256,     9,     5,  3666,   815,   479,
        50118, 25602, 15086, 13423,    90,  1396,  4391,  3988,    12,  4328,
         1758,    25,     5,   928,   526, 16164,    78,  2985,  3781,   479,
        50118, 20861,  3281, 10489,    32,    67,   149,     7,     5,    94,
          799,  1135,  2086,   155,    12,   176,     7, 19643,  1688,  3999,
         1243,   479,     2,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0, 31431,  3809,  1635,   490,   395,  1559,    19,    10,   481,
          999,    12,   620,  7027,   196,  4192, 14451,    30, 10240,   479,
        50118, 32180,   108, 10216,   311,   302,    40,  1905, 16732, 10144,
            6,   256,  9422, 20055,   479, 50118,  3762,     9,     5,   158,
        10216,  6751,   294,  1559,    40,    28,  2343,   697,    15,  3943,
          479, 50118, 40401, 25252,     6,  1127,  7138, 13179,     6, 23346,
          324, 15133,    40,  3008,    23,     5,  1011,   479,     2,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0,  1978, 11933,    13,  2183,     6,  2159,     6, 28149, 31565,
        23150,   479, 50118, 23295, 48007,  3579,    31, 10442,   470,  8952,
          479, 50118, 29151,  4609, 22078, 23150,   966,    59,    68, 28020,
            6, 36766,   479, 50118, 17245, 20401,   803, 12962,  4089,    13,
           55,    87,    80,   107,   479,     2,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0, 12815,  5244,   758, 12615,   230,  4450,  1535,    11,  9753,
         1881,    11,  1098,   479, 50118,   347,  4450,  1535,   738,    11,
            5,   471,    25,  5188,   860,     7,  8052,    39,  8588,   512,
           11, 20803, 20578,   479, 50118,  8138, 13907,  1243,  1037,  7875,
         3402,  1127,   625,  4488,  5695,   230,  4450,  1535,    11,  1098,
          479, 50118,  1749,    12,   180,    12,   279,   230,  4450,  1535,
         3776,    10,  7018, 32223,  6555,   950,     8,   758,   756,   479,
            2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), 'This code conditionally redraw screen when ``dirty`` attribute is valued refresh.\n\n        when pager attribute ``dirty`` is ``state_refresh``, cursor is moved\n        to (0,0), screen is cleared, and heading is displayed.\n\n        :param writer: callable writes to output stream, receiving unicode.\n        :returns: true if class attribute ``dirty`` is ``state_refresh``.', tensor([    0,  4030,  6732,  4756,    30,    10,   886,   557,   333,     6,
            5,  7929,   824,   479, 50118, 39868,  5836,    66, 27961,   346,
            9,   390,   223,  1437,    22,  6766,    75, 12738,     6,  1599,
           75, 11378,   113, 50118,  1121,     5,  1754,  3177,     6,    10,
         1647,     9,   167,  2928,    13,   145,  5100,    58,   390,   479,
            2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0, 25244, 12124,     6, 15284, 16379,  4781, 21793,    15,    22,
        27625,  3009,  4219,   113, 50118,   495, 23613, 23721,   293,    51,
           58,  7464,   447,   561,     6,    53,    24,  1006,   479, 50118,
         7083, 30406,   351,  2642,     9,     5,    76,    23, 14171, 17113,
          479, 50118, 16213,   927,    15, 12586, 10915, 38042, 14094,    35,
         3010,   311,    21,    22,   991, 23745,    60,    53,    14,    18,
         1153,    24,   479,     2,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), "This code decipher string using delastelle cipher according to initialised key.\n\n        example::\n\n            plaintext = delastelle('apcz wrlfbdkotyuqgenhxmivs').decipher(ciphertext)     \n\n        :param string: the string to decipher.\n        :returns: the deciphered string. the plaintext will be 1/3 the length of the ciphertext.", tensor([    0,  5341,    35,  1653, 10834,    11,  3285,  7780,  1947,     9,
        13330,     8,  7686,  1350,  3549,   411,    82,   479, 50118,  9058,
        29315, 20442,   457,    12, 28638,    29,  4018,     7,   744,    13,
         3474,   136,  9187,   479, 50118, 37349,  2029,   379,    12,   180,
        11305,     7,   320,  4269,  2784,   255,  1512,  1343,  4947,  1210,
            8,    22, 41302,  3569,  4110,   113, 50118,   113, 41302,  3569,
         4110,    60, 20442,    18, 11204,     6,   416,  2419,   130,   744,
        11305,   479,     2,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0,   113, 21067,  4011,   113,     8,    22, 33905,  3443,   113,
         4073,   275,  4149, 11097,   479, 50118,   725,  7997,  5251,  5999,
          918,    22, 10567,  5710,   113,  9524,   883, 11097,   479, 50118,
          717,  5471,  2459,  4543,  1792,    22,   133, 14809,    60,    22,
        41164,    18, 27151, 13604,    60,    22, 28324, 29739,   446, 17226,
          113, 50118,   347,  2816, 27583,    40,    28,  2308,    15,  3943,
           15,   772,   733,   479,     2,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1]), tensor([    0, 11329,  4668,  7033,    40,    28,  2998,    22, 30660, 30210,
        10046,   113,    11,   272, 37754,   479, 50118, 35129,   553,     7,
         7996,    13, 24926,  7317,    23,   513,   683,    10,   186,   479,
        50118, 15075,   161,  4441,   540,  4884,    16,  2245,     8,    64,
        15925, 26176, 12217,   479,     2,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
            1,     1,     1,     1,     1,     1,     1,     1])], 'code_generation': tensor([[    0,  9232, 27545,  ...,     1,     1,     1],
        [    0,  9232,  4195,  ...,     1,     1,     1],
        [    0,  9232,   181,  ...,     1,     1,     1],
        [    0,  9232,  4276,  ..., 50118,  1437,     2],
        [    0,  9232,  2451,  ...,  1437,  1437,     2],
        [    0,  9232, 38869,  ...,   134,     6,     2]]), 'translation': tensor([[    0, 28535,  6525,  ...,     1,     1,     1],
        [    0,   495,   918,  ...,     1,     1,     1],
        [    0,   717,  5720,  ...,     1,     1,     1],
        [    0, 21941,  6709,  ...,     1,     1,     1],
        [    0, 26795,  5398,  ...,     1,     1,     1]])}
